{"version":3,"sources":["title.jpg","InputForm.tsx","util/xorshift32.tsx","util/sentence_layout_element.tsx","util/layout.tsx","renderer.tsx","index.tsx"],"names":["module","exports","InputForm","props","handleChange","i","statement","newTexts","state","texts","slice","setState","handleSeedChange","seed","seedNum","parseInt","Number","isNaN","Date","now","handleSubmit","event","preventDefault","onSubmit","updateSeed","addTextArea","length","renderTextArea","Grid","item","key","xs","sm","Paper","elevation","Box","padding","TextField","color","label","multiline","fullWidth","value","onChange","e","target","render","textAreas","push","container","spacing","alignItems","justify","display","justifyContent","margin","Fab","size","aria-label","onClick","Divider","variant","type","Button","React","Component","XorShift32","w","x","y","z","rand","t","this","min","max","Math","abs","SentenceLayoutElement","isVertical","isBold","getLayout","layout","j","text","maxWidth","verticalArray","maxLength","reduce","acc","cur","vertical","Array","fill","reverse","forEach","Layout","width","height","statements","placeholder","sentences","availabilityMap","emptyNum","emptyNumRow","emptyNumColumn","remainingCharNum","logMap","console","log","row","setPlaceholder","posX","posY","round","dx","dy","makeLayout","sentence","locateSentence","sizeFactor","floor","sqrt","vLocation","findVerticalLocation","anchorX","anchorY","hLocation","findHorizontalLocation","updateAvailabilityVertically","updateAvailabilityHorizontally","wNeeds","map","wNeedsMax","candidatesRowAnchors","checkRangeY","available","candidatesNum","num","checkRangeX","candidateIndex","randInt","offsetY","startX","offsetX","k","splice","left","right","top","bottom","hNeeds","hNeedsMax","candidatesColumnAnchors","column","startY","filter","split","splitedTexts","a","c","Renderer","divider","useState","undefined","image","setImage","useEffect","canvas","document","createElement","context","getContext","WebFont","load","custom","families","urls","active","draw","toDataURL","fillStyle","fillRect","font","textAlign","textBaseline","fillText","thickness","lyt","alt","src","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","join","App","submitProperties","className","Container","style","background","paddingBottom","TitleImage","pointerEvents","Typography","gutterBottom","align","Link","href","rel","paddingY","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f939ee02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.8597613c.jpg\";","import React from 'react';\nimport { TextField, Grid, Paper, Box, Fab, Button, Divider, } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\ninterface InputFormProps{\n    onSubmit:(n:number, s:string[])=>void,\n}\n\ninterface InputFormState{\n    seed:number,\n    texts:string[],\n}\n\nclass InputForm extends React.Component<InputFormProps,InputFormState>{\n\n    constructor(props:InputFormProps){\n        super(props);\n\n        this.state={texts:[\"\",\"\",\"\"], seed:Date.now()}\n    }\n\n    handleChange=(i:number,statement:string)=>{\n        const newTexts=this.state.texts.slice();\n        newTexts[i]=statement;\n        this.setState({texts:newTexts});\n    }\n\n    handleSeedChange=(seed:string)=>{\n        const seedNum=parseInt(seed);\n        this.setState({seed:Number.isNaN(seedNum) ?Date.now() :seedNum});\n    }\n\n    handleSubmit=(event:React.FormEvent<HTMLFormElement>)=>{\n        event.preventDefault();\n        this.props.onSubmit(this.state.seed,this.state.texts);\n    }\n\n    updateSeed=()=>{\n        this.setState({seed:Date.now()});\n    }\n\n    addTextArea=()=>{\n        if(this.state.texts.length<100){\n            this.setState({texts:[...this.state.texts,\"\"]});\n        }\n    }\n\n    renderTextArea=(i:number)=>{\n        return (\n        <Grid item key={`${i}`} xs={12} sm={6}>\n            <Paper elevation={3}>\n                <Box padding={2}>\n                    <TextField color='secondary' label={`発言 ${i+1}`} multiline fullWidth value={this.state.texts[i]} onChange={(e) => this.handleChange(i,e.target.value)}/>\n                </Box>\n            </Paper>\n        </Grid>);\n        //return (<p key={i}><label>{`発言${i+1} : `}<textarea value={this.state.texts[i]} onChange={(e) => this.handleChange(i,e.target.value)} /></label></p>);\n    }\n\n    render=()=>{\n        const textAreas=[];\n        for(let i:number=0;i<this.state.texts.length;i++)textAreas.push(this.renderTextArea(i));\n\n        return (\n                <form onSubmit={this.handleSubmit}>\n                    <Grid container spacing={2} alignItems=\"center\" justify=\"flex-start\">\n                        {textAreas}\n                    </Grid>\n                    <Box　display=\"flex\" justifyContent='center' margin={2}>\n                        <Fab size=\"medium\" color='secondary' aria-label=\"add\" onClick={this.addTextArea}><AddIcon/></Fab>\n                    </Box>\n                    <Divider variant='middle'/>\n                    <Box　display=\"flex\" justifyContent='center' padding={2}>\n                        <TextField type='number' label=\"シード値\" color='secondary' value={this.state.seed} onChange={(e) => this.handleSeedChange(e.target.value)}/>\n                        <Button color=\"secondary\" onClick={this.updateSeed}>更新</Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">作成</Button>\n                    </Box>\n                    \n                </form>\n        );\n    }//<Container><input type=\"button\" value=\"+\" onClick={this.addTextArea}/></Container>\n\n}\n\nexport default InputForm;","export class XorShift32{\n\n    w:number;\n    x:number=123456789;\n    y:number=362436069;\n    z:number=521288629;\n    \n    constructor(seed = 88675123) {\n        this.w = seed;\n    }\n\n    rand=()=>{\n        let t:number = this.x^(this.x << 11);\n        this.x = this.y;\n        this.y = this.z;\n        this.z = this.w;\n\n        return this.w = ( this.w ^ (this.w >>> 19) ) ^ ( t ^ (t >>> 8) ); \n    }\n\n    randInt(min:number=0,max:number){\n        return min+(Math.abs(this.rand()) % ( max+1 - min ));\n    }\n}","export class SentenceLayoutElement{\n    texts:string[]; // 横向きLtRのデータを格納する。\n    x:number; // 横書きの場合、原点は左上。縦書きの場合、右上。\n    y:number;\n    size:number;\n    isVertical:boolean;\n    isBold:boolean;\n\n    constructor(texts:string[],x:number,y:number,size:number,isVertical:boolean=false,isBold:boolean=false){\n        this.texts=texts;\n        this.x=Math.max(0,x);\n        this.y=Math.max(0,y);\n        this.size=Math.max(1,size);\n        this.isVertical=isVertical;\n        this.isBold=isBold;\n    }\n\n    getLayout=()=>{\n        const layout=[];\n        if(this.isVertical){\n            \n            for(let i=0;i<this.texts.length;i++){\n                for(let j=0;j<this.texts[i].length;j++){\n                    layout.push({\n                        text: this.texts[i][j],\n                        x: Math.max(0, this.x - (i+0.5)*this.size), // TextAlign right -> center\n                        y: this.y + (j+0.5)*this.size, // baseline top -> middle\n                        maxWidth: this.size\n                    });\n                }\n\n            }\n        }else{\n            for(let i=0;i<this.texts.length;i++){\n                layout.push({\n                    text: this.texts[i],\n                    x: this.x, // TextAlign start\n                    y: this.y + (i+0.5)*this.size, // baseline top -> middle\n                    maxWidth: this.texts[i].length*this.size\n                });\n            }\n        }\n        return layout;\n    }\n\n    static verticalArray=(texts:string[]):string[]=>{ // 横書き文字列配列を縦書き用に変換する。\n        \n      const maxLength=texts.reduce((acc,cur)=>Math.max(acc,cur.length),0);\n      const vertical:string[]=Array(maxLength).fill(\"\");\n      const reversed = texts.reverse();\n      reversed.forEach((text)=>{\n        for(let i=0;i<text.length;i++){\n            vertical[i]+=text[i];\n        }\n      });\n\n      return vertical;\n    }\n}","import { XorShift32 } from './xorshift32';\nimport {SentenceLayoutElement} from './sentence_layout_element'\n\ninterface placeholder{\n    x:number,\n    y:number,\n    width:number,\n    height:number\n}\n\nexport class Layout{\n\n    sentences:SentenceLayoutElement[];\n\n    rand:XorShift32;\n\n\n\n    width:number;\n    height:number;\n\n    availabilityMap:boolean[][];//  indices[y][x]\n\n\n    \n    emptyNum:number;\n    emptyNumRow:number[];// eNumRow[y]\n    emptyNumColumn:number[];// eNumCol[x]\n\n    //statements:string[][];\n    remainingCharNum:number;\n    \n\n\n    constructor(width:number,height:number,seed:number,statements:string[],placeholder:placeholder={x:0,y:0,width:0,height:0}){\n        width=Math.round(width);\n        height=Math.round(height);\n        this.width=width;\n        this.height=height;\n\n        this.availabilityMap=[];\n        for(let i:number=0;i<height;i++){\n            this.availabilityMap.push(new Array(width).fill(true));\n        }\n\n        this.emptyNum=width*height;\n        this.emptyNumRow=new Array(height).fill(width);\n        this.emptyNumColumn=new Array(width).fill(height);\n\n\n        this.setPlaceholder(placeholder); // placeholder の領域を確保する。\n\n\n\n        this.rand=new XorShift32(seed);\n\n        this.sentences = statements.filter( (text:string) => !(text.length===0) )\n            .map((text:string) => new SentenceLayoutElement(text.split(/\\r\\n|\\r|\\n/),0,0,1));\n\n        const splitedTexts = statements.map((statement:string) => statement.split(/\\r\\n|\\r|\\n/));\n        this.remainingCharNum = splitedTexts.reduce((acc,cur)=> acc + cur.reduce((a,c) => a+c.length,0), 0)\n\n        this.makeLayout();\n    }\n\n\n    logMap=()=>{\n        console.log(`EmptyNum: ${this.emptyNum}`);\n        console.log(`EmptyNumRow: ${this.emptyNumRow}`);\n        console.log(`EmptyNumColumn: ${this.emptyNumColumn}`);\n        let log=\"\";\n        this.availabilityMap.forEach((row)=>{\n            row.forEach((x)=>log+= x?'⚪':'🔴')\n            log+=\"\\n\";\n        });\n        console.log(log);\n    }\n\n    setPlaceholder=(placeholder:placeholder)=>{\n        const x=Math.round(placeholder.x);\n        const y=Math.round(placeholder.y);\n        const width=Math.round(placeholder.width);\n        const height=Math.round(placeholder.height);\n\n        let posX:number;\n        let posY:number;\n\n        for(let dx=0;dx<width;dx++){\n            for(let dy=0;dy<height;dy++){\n\n                if(x+dx<0)posX=0;\n                else if(x+dx>=this.width)posX=this.width-1;\n                else posX=x+dx;\n\n                if(y+dy<0)posY=0;\n                else if(y+dy>=this.height)posY=this.height-1;\n                else posY=y+dy;\n\n                if(this.availabilityMap[posY][posX]){\n                    this.availabilityMap[posY][posX]=false;\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[posY]--;\n                    this.emptyNumColumn[posX]--;\n                }\n            }\n        }\n    }\n\n\n    makeLayout=()=>{\n        this.sentences.forEach((sentence)=>{\n            this.locateSentence(sentence);\n            sentence.isBold=(this.rand.rand()%3===0); // 1/3で太字\n            //console.log(`${sentence.texts}\\nX: ${sentence.x} Y: ${sentence.y}\\nSize: ${sentence.size} IsVertical: ${sentence.isVertical}\\n`);\n            //console.log(`${SentenceLayoutElement.verticalArray(sentence.texts).map((t)=>t+\"\\n\")}\\n`);\n        });\n    }\n\n\n\n    locateSentence=(sentence:SentenceLayoutElement)=>{\n\n        let sizeFactor:number = Math.floor( Math.sqrt(this.emptyNum/this.remainingCharNum) );\n        const isVertical=(this.rand.rand()%3===0) // 1/3 で縦書き\n\n        while(sizeFactor>0){\n            if(isVertical){ // 縦書きモード\n                const vLocation=this.findVerticalLocation(sentence.texts,sizeFactor);\n                if(vLocation.anchorX!==-1||vLocation.anchorY!==-1){\n                    sentence.x=vLocation.anchorX;\n                    sentence.y=vLocation.anchorY;\n                    sentence.isVertical=true;\n                    break;\n                }\n\n            }else{ // 横書きモード\n                const hLocation=this.findHorizontalLocation(sentence.texts,sizeFactor);\n                if(hLocation.anchorX!==-1||hLocation.anchorY!==-1){\n                    sentence.x=hLocation.anchorX;\n                    sentence.y=hLocation.anchorY;\n                    break;\n                }\n            }\n            \n            sizeFactor--;\n        }\n\n        sentence.size=sizeFactor;\n        if(sentence.isVertical)this.updateAvailabilityVertically(sentence);\n        else this.updateAvailabilityHorizontally(sentence);\n    }\n\n\n\n\n    findHorizontalLocation=(texts:string[],sizeFactor:number)=>{\n        //console.log(`findLocation called : sizeFactor is ${sizeFactor}`);\n        const wNeeds:number[] = texts.map((text)=>sizeFactor*text.length);\n        const wNeedsMax=wNeeds.reduce((acc,cur)=>Math.max(acc,cur));\n        if(wNeedsMax>this.width)return {anchorX:-1,anchorY:-1};\n\n        const candidatesRowAnchors:number[]=[];// 候補地の行番号配列\n        const checkRangeY=1 + this.emptyNumRow.length - sizeFactor*wNeeds.length;\n        //console.log(`wNeeds is ${wNeeds}`);\n        //console.log(`checkRangeY : 0 ~ ${checkRangeY-1}`);\n        for(let y=0;y<checkRangeY;y++){ // y を動かす。\n\n            let available:boolean=true;\n\n            for(let i=0;i<wNeeds.length;i++){\n\n                for(let j=0;j<sizeFactor;j++){\n                    const row=y+ i*sizeFactor +j;\n                    if(row>=this.emptyNumRow.length || this.emptyNumRow[row] < wNeeds[i] ){\n                        available=false;\n                        break;\n                    }\n                }\n                if(!available)break;\n            }\n\n            if(available)candidatesRowAnchors.push(y);// Anchor Y の候補\n        }\n\n        let anchorX:number=-1;\n        let anchorY:number=-1;\n\n        const candidatesNum=candidatesRowAnchors.length\n        //console.log(`candidates : ${candidatesNum}`);\n\n        for(let num=0;num<candidatesNum;num++){\n\n            const checkRangeX=1 + this.width - wNeedsMax;\n\n\n            const candidateIndex = this.rand.randInt(0,candidatesRowAnchors.length-1);\n            const offsetY=candidatesRowAnchors[candidateIndex]; // Anchor Y 候補を一つ選ぶ。\n\n            const startX=this.rand.randInt(0,checkRangeX-1); // Anchor X 走査の開始点。\n            for(let i=0;i<checkRangeX;i++){\n                const offsetX=(i+startX)%checkRangeX; // 乱数に基づく開始点から Anchor X を動かす。\n                let available:boolean=true;\n\n                for(let j=0;j<wNeeds.length;j++){\n\n                    for(let k=0;k<sizeFactor;k++){\n                        const dy=j*sizeFactor +k;// y を動かす。\n                        for(let dx=0;dx<wNeeds[j];dx++){// x を動かす。\n                            if(! this.availabilityMap[offsetY+dy][offsetX+dx]){// 既に埋まっているか(false)判定。\n                                available=false;\n                                break;\n                            }\n                        }\n                        if(!available)break;\n                    }\n                    if(!available)break;\n                }\n\n                if(available){ // 利用可能であればその位置を記録し終了。\n                    anchorX=offsetX;\n                    anchorY=offsetY;\n                    break;\n                }\n            }\n            if(anchorX===-1&&anchorY===-1){ // 利用不可能だった場合、候補地から除く。\n                candidatesRowAnchors.splice(candidateIndex,1);\n                //console.log(`candidate ${candidateIndex} is not available.`)\n            }else{\n                //console.log(\"break\");\n                break;\n            }\n        }\n\n        return {anchorX,anchorY};\n        \n    }\n\n    updateAvailabilityHorizontally=(sentence:SentenceLayoutElement)=>{\n\n        const wNeeds:number[] = sentence.texts.map((text)=>sentence.size*text.length);\n\n        for(let i=0;i<wNeeds.length;i++){\n\n            for(let j=0;j<sentence.size;j++){\n                const dy=i*sentence.size +j;// y を動かす。\n\n                for(let dx=0;dx<wNeeds[i];dx++){// x を動かす。\n                    this.availabilityMap[sentence.y+dy][sentence.x+dx]=false; // 値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n            }\n        }\n\n\n\n        // 周囲１マスずつマージンを確保する。\n\n        for(let i=0;i<wNeeds.length;i++){ // 左右マージン\n\n            for(let j=0;j<sentence.size;j++){\n                const dy=i*sentence.size +j;// y を動かす。\n                const left=Math.max(0, sentence.x-1);\n                const right=Math.min(this.width-1, sentence.x+wNeeds[i]);\n\n                if(this.availabilityMap[sentence.y+dy][left]){\n                    this.availabilityMap[sentence.y+dy][left]=false; // 左マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[left]--;\n\n                }\n                if(this.availabilityMap[sentence.y+dy][right]){\n                    this.availabilityMap[sentence.y+dy][right]=false; // 右マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[right]--;\n\n                }\n\n\n            }\n        }\n\n        for(let i=0;i<wNeeds.length;i++){ // 上下マージン\n\n            for(let dx=0;dx<wNeeds[i];dx++){// x を動かす。\n                const top=Math.max(0, sentence.y + i*sentence.size-1);\n                const bottom=Math.min(this.height-1, sentence.y + (i+1)*sentence.size);\n\n                if(this.availabilityMap[top][sentence.x+dx]){\n                    this.availabilityMap[top][sentence.x+dx]=false; // 上マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[top]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n                if(this.availabilityMap[bottom][sentence.x+dx]){\n                    this.availabilityMap[bottom][sentence.x+dx]=false; // 下マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[bottom]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n\n            }\n        }\n\n        this.remainingCharNum-=sentence.texts.reduce((acc,cur)=> acc + cur.length,0); // 配置した文字数を引く。\n    }\n\n\n\n\n\n    findVerticalLocation=(texts:string[],sizeFactor:number)=>{\n        const hNeeds:number[] = texts.map((text)=>sizeFactor*text.length);\n        const hNeedsMax=hNeeds.reduce((acc,cur)=>Math.max(acc,cur));\n\n        if(hNeedsMax>this.height)return {anchorX:-1,anchorY:-1};\n\n        const candidatesColumnAnchors:number[]=[];// 候補地の列番号配列\n        const checkRangeX= sizeFactor*hNeeds.length -1; // 走査領域の左端\n        //console.log(`texts: ${texts}\\nsizeFactor: ${sizeFactor}`);\n        //console.log(`hNeeds: ${hNeeds}`);\n        //console.log(`checkRangeX: ${checkRangeX} - ${this.emptyNumColumn.length}`);\n        for(let x=this.emptyNumColumn.length;x >= checkRangeX;x--){ // x を右から左へ動かす。[checkRangeX, Width]\n\n            let available:boolean=true;\n\n            for(let i=0;i<hNeeds.length;i++){\n\n                for(let j=0;j<sizeFactor;j++){\n                    const column=x - i*sizeFactor - j;\n                    if(column<checkRangeX || this.emptyNumColumn[column] < hNeeds[i] ){\n                        available=false;\n                        break;\n                    }\n                }\n                if(!available)break;\n            }\n\n            if(available)candidatesColumnAnchors.push(x);// Anchor X の候補 TOP RIGHT\n        }\n\n        let anchorX:number=-1;\n        let anchorY:number=-1;\n\n        const candidatesNum=candidatesColumnAnchors.length\n        //console.log(`candidates: ${candidatesNum}`);\n\n        for(let num=0;num<candidatesNum;num++){\n\n            const checkRangeY=1 + this.height - hNeedsMax;\n\n\n            const candidateIndex = this.rand.randInt(0,candidatesColumnAnchors.length-1);\n            const offsetX=candidatesColumnAnchors[candidateIndex]; // Anchor X 候補を一つ選ぶ。\n\n            const startY=this.rand.randInt(0,checkRangeY-1); // Anchor Y 走査の開始点。\n            for(let i=0;i<checkRangeY;i++){\n                const offsetY=(i+startY)%checkRangeY; // 乱数に基づく開始点から Anchor X を動かす。\n                let available:boolean=true;\n\n                for(let j=0;j<hNeeds.length;j++){\n\n                    for(let k=0;k<sizeFactor;k++){\n                        const dx= -j*sizeFactor -k;// x を動かす。\n                        for(let dy=0;dy<hNeeds[j];dy++){// y を動かす。\n                            if(offsetX+dx<0 || !this.availabilityMap[offsetY+dy][offsetX+dx]){// 既に埋まっているか(false)判定。\n                                available=false;\n                                break;\n                            }\n                        }\n                        if(!available)break;\n                    }\n                    if(!available)break;\n                }\n\n                if(available){ // 利用可能であればその位置を記録し終了。\n                    anchorX=offsetX;\n                    anchorY=offsetY;\n                    break;\n                }\n            }\n            if(anchorX===-1&&anchorY===-1){ // 利用不可能だった場合、候補地から除く。\n                candidatesColumnAnchors.splice(candidateIndex,1);\n                //console.log(`candidate ${candidateIndex} is not available.`)\n            }else{\n                //console.log(\"break\");\n                break;\n            }\n        }\n        //console.log(`anchorX:${anchorX}, anchorY:${anchorY}`);\n        return {anchorX,anchorY};\n        \n    }\n\n    updateAvailabilityVertically=(sentence:SentenceLayoutElement)=>{\n        const hNeeds:number[] = sentence.texts.map((text)=>sentence.size*text.length);\n\n        for(let j=0;j<hNeeds.length;j++){\n\n            for(let k=0;k<sentence.size;k++){\n                const dx= -j*sentence.size -k;// x を動かす。\n\n                for(let dy=0;dy<hNeeds[j];dy++){// y を動かす。\n                    this.availabilityMap[sentence.y+dy][sentence.x+dx]=false;\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]-=1;\n                    this.emptyNumColumn[sentence.x+dx]-=1;\n                }\n            }\n        }\n\n\n\n        // 周囲１マスずつマージンを確保する。\n\n        for(let i=0;i<hNeeds.length;i++){ // 上下マージン\n\n            for(let j=0;j<sentence.size;j++){\n                const dx= -i*sentence.size -j;// x を動かす。\n                const top=Math.max(0, sentence.y-1);\n                const bottom=Math.min(this.height-1, sentence.y+hNeeds[i]);\n\n                if(this.availabilityMap[top][sentence.x+dx]){\n                    this.availabilityMap[top][sentence.x+dx]=false; // 左マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[top]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n                if(this.availabilityMap[bottom][sentence.x+dx]){\n                    this.availabilityMap[bottom][sentence.x+dx]=false; // 右マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[bottom]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n\n\n            }\n        }\n\n        for(let i=0;i<hNeeds.length;i++){ // 左右マージン\n\n            for(let dy=0;dy<hNeeds[i];dy++){// y を動かす。\n                const right=Math.min(this.width-1, sentence.x - i*sentence.size +1);\n                const left=Math.max(0, sentence.x - (i+1)*sentence.size);\n\n                if(this.availabilityMap[sentence.y+dy][right]){\n                    this.availabilityMap[sentence.y+dy][right]=false; // 右マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[right]--;\n\n                }\n                if(this.availabilityMap[sentence.y+dy][left]){\n                    this.availabilityMap[sentence.y+dy][left]=false; // 左マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[left]--;\n\n                }\n\n            }\n        }\n\n\n\n        this.remainingCharNum-=sentence.texts.reduce((acc,cur)=> acc + cur.length,0); // 配置した文字数を引く。\n\n    }\n\n\n\n\n}\n\n\n","import React, { useEffect, useState } from 'react';\nimport { Layout } from './util/layout';\nimport \"./css/image.css\";\nimport WebFont from 'webfontloader'\nimport { Typography } from '@material-ui/core';\n\n\ninterface props{\n    statements:string[];\n    width:number;\n    height:number;\n    divider?:number\n    seed?:number;\n}\n\nconst Renderer:React.FC<props>=({statements, width, height, divider=5, seed=1234567})=>{\n    const [image,setImage]=useState<string|undefined>(undefined);\n\n    useEffect(()=>{\n        const canvas=document.createElement(\"canvas\");\n        canvas.width=width;\n        canvas.height=height;\n\n        const context=canvas.getContext(\"2d\");\n\n\n        if(context){\n            \n            WebFont.load({\n                custom:{\n                    families:['Noto Serif JP:500,700','Noto Serif JP Vertical:500,700'],\n                    urls:['./css/fonts.css']\n                },\n                active:()=>{\n                    draw(context);\n                    setImage( canvas.toDataURL() );\n                },\n            });\n\n        }\n    });\n    \n\n\n    const draw=(context:CanvasRenderingContext2D)=>{\n        context.fillStyle=\"white\";\n        context.fillRect(0,0,width,height);\n\n        const placeholder= {x:(width-300)/divider ,y:(height-30)/divider, width:300/divider, height:30/divider};\n        context.font=\"30px 'M PLUS Rounded 1c', sans-serif\";\n        //context.fillStyle = \"rgba(29, 161, 242, 0.5)\";\n        //context.fillRect(width-305, height-35, 305, 35);\n        context.fillStyle=\"gray\";//\"rgb(29, 161, 242)\";\n        context.textAlign=\"end\";\n        context.textBaseline=\"bottom\";\n        context.fillText(\"#発言まとめメーカー\",width,height);\n\n        const layout = new Layout(width/divider, height/divider, seed, statements, placeholder);\n        //layout.logMap();\n\n        context.textBaseline=\"middle\";\n        context.fillStyle=\"black\";\n\n        layout.sentences.forEach((sentence)=>{\n            context.textAlign=sentence.isVertical?\"center\":\"left\";\n\n            const thickness=sentence.isBold?\"bold \":\"\";\n            const font = `${sentence.isVertical?\"'Noto Serif JP Vertical', \":\"\"}'Noto Serif JP', 'Yu Mincho', 'Hiragino Mincho ProN', serif`;\n            context.font=`${thickness}${divider*sentence.size}px ${font}`;\n            \n            const lyts = sentence.getLayout();\n            lyts.forEach((lyt)=>{\n                context.fillText(lyt.text, divider*lyt.x, divider*lyt.y, divider*lyt.maxWidth);\n            });                \n        });\n\n    }\n\n\n\n    return (<img alt=\"お使いのブラウザはWebフォントに対応していません。\" src={image}/>);\n    \n}\n\nexport default Renderer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/fonts.css';\nimport InputForm from './InputForm';\nimport Renderer from './renderer';\nimport { Typography, Container, Grid, Paper, Box, Divider, MuiThemeProvider, createMuiTheme, Link } from '@material-ui/core';  \nimport TitleImage from './title.jpg';\n\nconst howTo=\"下の空欄に発言を入力してください。もっと入力したいときは「＋」を押してください。入力が終わったら「作成」をタップ。\"\nconst hints=\"できるだけたくさんの発言を入力しましょう！画像はシード値をもとにランダム生成され、「更新」を押すと別のパターンに変化します。できた画像は長押しタップ等で保存できます。\"\nconst letstweet=\"「#発言まとめメーカー」をつけてツイートしよう！\";\nconst license=\"発言まとめメーカーで生成された画像は、商用・非商用問わず無料でご利用いただけます。自由に編集・加工していただいて構いませんし、報告等も特に必要ありません。ご利用の際のクレジット表記について、商用の場合は「発言まとめメーカー」の名前とリンクを入れてください。生成された画像、およびその内容によって生じる損害については一切の責任を負いかねますのでご了承ください。\";\n\nconst theme=createMuiTheme({\n\n  palette:{\n    primary:{main:'#ffd900'},\n    secondary:{main:'#65318e'},\n  },\n\n  typography: {\n    fontFamily: [\n      'M PLUS Rounded 1c',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n\ninterface AppProps{\n}\n\ninterface AppState{\n  seed:number,\n  statements:string[],\n}\n\nclass App extends React.Component<AppProps,AppState>{\n\n  constructor(props:AppProps){\n    super(props);\n    \n    this.state={statements:[],seed:1234567};\n\n  }\n\n  submitProperties=(seed:number, statements:string[])=>{\n    const sum = statements.reduce((acc,cur)=>acc+cur.length,0);\n    if(sum===0)statements=new Array(100).fill(\"発言を入力してください\");\n    this.setState({seed:seed ,statements:statements});\n    //console.log(statements)\n    //this.setState({statements:s});\n  }\n\n  render(){\n    return (\n      <div className=\"app\" >\n      <MuiThemeProvider theme={theme}>\n      <Container style={{background:'white'}}>\n        <Box paddingBottom={2}>\n          <img src={TitleImage} style={{ pointerEvents:'none'}}/>\n        </Box>\n      </Container>\n\n      <Container style={{background:'linear-gradient(#ffffff, #ede7f6)'}}>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          <Grid item xs={12}>\n          <Typography gutterBottom align='right'>\n          <Link href=\"https://yukihirok.github.io/hatsugen-matome-maker/legacy/\" color='secondary' target=\"_blank\" rel=\"noopener\">旧版はこちら</Link>\n          </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={3}>\n              <Box padding={2}>\n                <Typography variant='h6' gutterBottom align='center'>使い方</Typography>\n                <Typography variant='body1' gutterBottom>{howTo}</Typography>\n                <Typography variant='body1' gutterBottom>{hints}</Typography>\n                <Typography variant='body1' gutterBottom>{letstweet}</Typography>\n              </Box>\n            </Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper elevation={3}>\n              <Box padding={2}>\n                <Typography variant='h6' gutterBottom align='center'>画像の利用について</Typography>\n                <Typography variant='body1' gutterBottom>{license}</Typography>\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n        <Box paddingY={2}>\n          <Divider variant='middle'/>\n        </Box>\n      </Container>\n\n      <Container style={{background:'#ede7f6'}}>\n        <InputForm onSubmit={this.submitProperties}/>\n        {(this.state.statements.length===0)\n          ?null\n          :<Box paddingBottom={4}><Paper elevation={3}><Box padding={2}>\n            <Renderer statements={this.state.statements} seed={this.state.seed} width={1500} height={1000}/>\n          </Box></Paper></Box>\n        }\n      </Container>\n\n      <Box style={{background:'#302833', color:'white'}}>\n        <Typography align='center'>発言まとめメーカー</Typography>\n        <Typography align='center'>Copyright © 2019-2020 <Link color='inherit' href=\"https://twitter.com/2000ymon\" target=\"_blank\" rel=\"noopener\">@2000ymon</Link> All Rights Reserved.</Typography>\n      </Box>\n\n      </MuiThemeProvider>\n    </div>\n);\n  }\n}\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}