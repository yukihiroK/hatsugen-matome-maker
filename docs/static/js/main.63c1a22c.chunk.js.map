{"version":3,"sources":["title.jpg","util/text_props.tsx","util/xorshift32.tsx","InputForm.tsx","util/sentence_layout_element.tsx","util/layout.tsx","renderer.tsx","index.tsx"],"names":["module","exports","TextProps","text","fontNum","isBold","weight","isItalic","this","fontList","XorShift32","seed","w","x","y","z","rand","t","min","max","Math","abs","COLORS","name","value","InputForm","props","handleInputChange","i","newTp","state","textprops","slice","setState","handleSeedChange","seedNum","parseInt","Number","isNaN","Date","now","handleTabChange","event","isAdvanced","handleFontChange","handleWeightChange","handleIsItalicChange","handleSubmit","preventDefault","sum","map","reduce","acc","cur","length","tp","c","color","bcg","backgroundColor","forEach","push","onSubmit","updateSeed","addTextArea","renderBasicTextArea","Grid","item","key","xs","sm","Paper","elevation","Box","padding","TextField","label","multiline","fullWidth","onChange","e","target","renderAdvancedTextArea","FormControl","InputLabel","Select","displayEmpty","fontName","renderValue","font","index","MenuItem","FormGroup","row","FormControlLabel","control","Checkbox","checked","colorSelects","style","minWidth","autoWidth","fontSize","render","textAreas","container","spacing","alignItems","justify","Tabs","centered","Tab","display","justifyContent","margin","Fab","size","aria-label","onClick","Divider","variant","type","Button","React","Component","SentenceLayoutElement","texts","isVertical","getLayout","layout","j","maxWidth","verticalArray","maxLength","vertical","Array","fill","reverse","HorizontalChars","Layout","width","height","statements","placeholder","sentences","availabilityMap","emptyNum","emptyNumRow","emptyNumColumn","remainingCharNum","logMap","console","log","setPlaceholder","posX","posY","round","dx","dy","makeLayout","sentence","locateSentence","sizeFactor","floor","sqrt","vLocation","findVerticalLocation","anchorX","anchorY","hLocation","findHorizontalLocation","updateAvailabilityVertically","updateAvailabilityHorizontally","wNeeds","wNeedsMax","candidatesRowAnchors","checkRangeY","available","candidatesNum","num","checkRangeX","candidateIndex","randInt","offsetY","startX","offsetX","k","splice","left","right","top","bottom","hNeeds","hNeedsMax","candidatesColumnAnchors","column","startY","filter","isVert","split","some","char","includes","splitedTexts","statement","a","Renderer","divider","useState","undefined","image","setImage","useEffect","canvas","document","createElement","context","getContext","families","WebFont","load","custom","urls","active","draw","toDataURL","fillStyle","fillRect","textAlign","textBaseline","fillText","lyt","alt","src","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","join","App","submitProperties","className","Container","background","paddingBottom","TitleImage","pointerEvents","Typography","gutterBottom","align","paddingY","paddingTop","Link","href","rel","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63c1a22c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.8597613c.jpg\";","class TextProps {\n\n    text:string\n    weight:number;\n    isItalic:boolean;\n    fontNum:number;\n\n    static readonly fontList:ReadonlyArray<string>=[\n        'Noto Serif JP',\n        'Noto Sans JP',\n        'M PLUS Rounded 1c',\n    ];\n\n    constructor(text:string,fontNum:number=0,isBold:boolean=false,weight:number=400,isItalic:boolean=false){\n        this.text=text;\n        this.fontNum=fontNum;\n        this.weight=(isBold)?700 :weight;\n        this.isItalic=isItalic;\n    }\n\n    get isBold():boolean{\n        return (this.weight===700);\n    }\n\n    get fontName():string{\n        return TextProps.fontList[this.fontNum];\n    }\n\n}\n\nexport default TextProps;","export class XorShift32{\n\n    w:number;\n    x:number=123456789;\n    y:number=362436069;\n    z:number=521288629;\n    \n    constructor(seed = 88675123) {\n        this.w = seed;\n    }\n\n    rand=()=>{\n        let t:number = this.x^(this.x << 11);\n        this.x = this.y;\n        this.y = this.z;\n        this.z = this.w;\n\n        return this.w = ( this.w ^ (this.w >>> 19) ) ^ ( t ^ (t >>> 8) ); \n    }\n\n    randInt(min:number=0,max:number){\n        return min+(Math.abs(this.rand()) % ( max+1 - min ));\n    }\n}","import React from 'react';\nimport { TextField, Grid, Paper, Box, Fab, Button, Divider, Tabs, Tab, Select, MenuItem, InputLabel, FormControl, FormControlLabel, Checkbox, FormGroup, Popover, Typography, } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextProps from './util/text_props';\nimport { XorShift32 } from './util/xorshift32';\nimport Brightness1Icon from '@material-ui/icons/Brightness1';\n\ninterface color{\n    name:string,\n    value:string\n}\n\nconst COLORS:color[]=[\n    {name:'透明',value:'rgba(0,0,0,0)'},\n    {name:'白',value:'white'},\n    {name:'銀色',value:'silver'},\n    {name:'灰色',value:'gray'},\n    {name:'黒',value:'black'},\n    {name:'赤',value:'red'},\n    {name:'マルーン',value:'maroon'},\n    {name:'黄色',value:'yellow'},\n    {name:'オリーブ',value:'olive'},\n    {name:'ライム',value:'lime'},\n    {name:'緑',value:'green'},\n    {name:'水色',value:'aqua'},\n    {name:'ティール',value:'teal'},\n    {name:'青',value:'navy'},\n    {name:'ネイビー',value:'aqua'},\n    {name:'フクシャ',value:'fuchsia'},\n    {name:'紫',value:'purple'},\n]\n\n\n\ninterface InputFormProps{\n    onSubmit:(n:number,t:TextProps[],bgc:string,c:string)=>void,\n}\n\ninterface InputFormState{\n    seed:number,\n    textprops:TextProps[],\n    isAdvanced:boolean,\n    backgroundColor:color,\n    color:color,\n}\n\nclass InputForm extends React.Component<InputFormProps,InputFormState>{\n\n    constructor(props:InputFormProps){\n        super(props);\n\n        this.state={\n            textprops:[new TextProps(\"\"),new TextProps(\"\"),new TextProps(\"\")],\n            seed:Date.now(),\n            isAdvanced:false,\n            backgroundColor: COLORS[1],//'white',\n            color:COLORS[4],\n        }\n    }\n\n    handleInputChange=(i:number,text:string)=>{\n        const newTp=this.state.textprops.slice();\n        newTp[i].text=text;\n        this.setState({textprops:newTp});\n    }\n\n    handleSeedChange=(seed:string)=>{\n        const seedNum=parseInt(seed);\n        this.setState({seed:Number.isNaN(seedNum) ?Date.now() :seedNum});\n    }\n\n    handleTabChange=(event:React.ChangeEvent<{}>,value:number)=>{\n        this.setState({isAdvanced:(value===1)});\n    }\n\n    handleFontChange=(i:number, fontNum:number)=>{\n        const props = this.state.textprops.slice();\n        props[i].fontNum=fontNum;\n        this.setState({textprops:props});\n    }\n\n    handleWeightChange=(i:number, weight:number)=>{\n        const props = this.state.textprops.slice();\n        props[i].weight=weight;\n        this.setState({textprops:props});\n    }\n\n    handleIsItalicChange=(i:number, isItalic:boolean)=>{\n        const props = this.state.textprops.slice();\n        props[i].isItalic=isItalic;\n        this.setState({textprops:props});\n    }\n\n\n\n\n    handleSubmit=(event:React.FormEvent<HTMLFormElement>)=>{\n        event.preventDefault();\n\n        const texts=this.state.textprops.map((t)=>t.text);\n        const sum = texts.reduce((acc,cur)=>acc+cur.length,0);\n\n        let tp:TextProps[]=[];\n        let c=this.state.color.value;\n        let bcg=this.state.backgroundColor.value;\n\n        const rand=new XorShift32(this.state.seed);\n\n        tp=this.state.textprops.slice();\n        if(!this.state.isAdvanced){\n            tp.forEach((t)=> {\n                t.fontNum=0;\n                t.isItalic=false;\n                t.weight=(rand.rand()%3===0)?700:400;\n            });\n            c='black';\n            bcg='white';\n        }\n\n        if(sum===0){\n            tp=[];\n            for(let i=0;i<100;i++)tp.push(new TextProps(\"発言を入力してください\",0,rand.rand()%3===0));\n        }\n\n        this.props.onSubmit(this.state.seed,tp,bcg,c);\n\n    }\n\n\n\n    updateSeed=()=>{\n        this.setState({seed:Date.now()});\n    }\n\n    addTextArea=()=>{\n        if(this.state.textprops.length<100){\n            this.setState({textprops:[...this.state.textprops,new TextProps(\"\")]});\n        }\n    }\n\n\n\n\n\n    renderBasicTextArea=(i:number)=>{\n        return (\n        <Grid item key={`${i}`} xs={12} sm={6}>\n            <Paper elevation={3}>\n                <Box padding={2}>\n                    <TextField color='secondary' label={`発言 ${i+1}`} multiline fullWidth value={this.state.textprops[i].text} onChange={(e) => this.handleInputChange(i,e.target.value)}/>\n                </Box>\n            </Paper>\n        </Grid>);\n        //return (<p key={i}><label>{`発言${i+1} : `}<textarea value={this.state.texts[i]} onChange={(e) => this.handleChange(i,e.target.value)} /></label></p>);\n    }\n\n\n    renderAdvancedTextArea=(i:number)=>{\n        return (\n            <Grid item key={`${i}`} xs={12} sm={6}>\n                <Paper elevation={3}>\n                    <Box padding={2}>\n                        <FormControl>\n                        <InputLabel color='secondary' >フォント</InputLabel>\n                        <Select color='secondary' displayEmpty value={this.state.textprops[i].fontName} renderValue={(value:any)=>{return this.state.textprops[i].fontName}} onChange={(event)=>this.handleFontChange(i,event.target.value as number)}>\n                            {TextProps.fontList.map((font,index)=><MenuItem value={index} key={index}>{font}</MenuItem>)}\n                        </Select>\n                        <FormGroup row>\n                        <FormControlLabel\n                            control={<Checkbox checked={this.state.textprops[i].isBold} onChange={(event,checked)=>this.handleWeightChange(i,checked?700:400)} />}\n                            label=\"太字\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox checked={this.state.textprops[i].isItalic} onChange={(event,checked)=>this.handleIsItalicChange(i,checked)} />}\n                            label=\"斜体\"\n                        />\n                        </FormGroup>\n                        </FormControl>\n                        <TextField color='secondary' label={`発言 ${i+1}`} multiline fullWidth value={this.state.textprops[i].text} onChange={(e) => this.handleInputChange(i,e.target.value)}/>\n                    </Box>\n                </Paper>\n            </Grid>);\n    }\n\n/*\n    renderColorChangers=()=>{\n        return(\n            <Grid item xs={12}>\n            <Grid container direction='row' spacing={2} alignItems=\"center\" justify=\"center\">\n            <Grid item xs>\n                <InputLabel>背景色</InputLabel>\n                <ChromePicker color={this.state.backgroundColor} onChange={(color)=>this.setState({backgroundColor:color.rgb})}/>\n            </Grid>\n            <Grid item xs>\n                <InputLabel>背景色</InputLabel>\n                <ChromePicker color={this.state.backgroundColor} onChange={(color)=>this.setState({backgroundColor:color.rgb})}/>\n            </Grid>\n            </Grid></Grid>\n        );\n    }*/\n\n    colorSelects=()=>{\n        return(\n        <Grid item xs={12}>\n            <Paper elevation={3}>\n                <Box padding={2}>\n                    <FormControl>       \n                        <InputLabel color='secondary' >背景色</InputLabel>\n                        <Select style={{minWidth:100}} autoWidth color='secondary' displayEmpty value={this.state.backgroundColor.name} renderValue={(value:any)=>{return this.state.backgroundColor.name}} onChange={(event)=>this.setState({backgroundColor:COLORS[event.target.value as number]})}>\n                            {COLORS.map((color,index)=><MenuItem value={index} key={index}><Brightness1Icon fontSize='small' style={{color:color.value}}/>{color.name}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                    <FormControl>       \n                        <InputLabel color='secondary' >文字色</InputLabel>\n                        <Select style={{minWidth:100}} autoWidth color='secondary' displayEmpty value={this.state.color.name} renderValue={(value:any)=>{return this.state.color.name}} onChange={(event)=>this.setState({color:COLORS[event.target.value as number]})}>\n                            {COLORS.map((color,index)=><MenuItem value={index} key={index}><Brightness1Icon fontSize='small' style={{color:color.value}}/>{color.name}</MenuItem>)}\n                        </Select>\n                    </FormControl>\n                </Box>\n            </Paper>\n        </Grid>);\n    }\n\n\n    render=()=>{\n        const textAreas=[];\n        for(let i:number=0;i<this.state.textprops.length;i++) textAreas.push((this.state.isAdvanced)?this.renderAdvancedTextArea(i):this.renderBasicTextArea(i));\n\n\n        return (\n                <form onSubmit={this.handleSubmit}>\n                    <Grid container spacing={2} alignItems=\"center\" justify=\"flex-start\">\n                        <Grid item xs={12}><Paper><Tabs centered value={this.state.isAdvanced?1:0} onChange={this.handleTabChange}>\n                            <Tab label='Basic'/>\n                            <Tab label='Advanced'/>\n                        </Tabs></Paper></Grid>\n                        {(!this.state.isAdvanced)?null:this.colorSelects()}\n                        {textAreas}\n                    </Grid>\n                    <Box　display=\"flex\" justifyContent='center' margin={2}>\n                        <Fab size=\"medium\" color='secondary' aria-label=\"add\" onClick={this.addTextArea}><AddIcon/></Fab>\n                    </Box>\n                    <Divider variant='middle'/>\n                    <Box　display=\"flex\" justifyContent='center' padding={2}>\n                        <TextField type='number' label=\"シード値\" color='secondary' value={this.state.seed} onChange={(e) => this.handleSeedChange(e.target.value)}/>\n                        <Button color=\"secondary\" onClick={this.updateSeed}>更新</Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">作成</Button>\n                    </Box>\n                    \n                </form>\n        );\n    }\n\n}\n\nexport default InputForm;","export class SentenceLayoutElement{\n    texts:string[]; // 横向きLtRのデータを格納する。\n    x:number; // 横書きの場合、原点は左上。縦書きの場合、右上。\n    y:number;\n    size:number;\n    isVertical:boolean;\n    //isBold:boolean;\n\n    constructor(texts:string[], x:number, y:number, size:number, isVertical:boolean,){\n        this.texts=texts;\n        this.x=Math.max(0,x);\n        this.y=Math.max(0,y);\n        this.size=Math.max(1,size);\n        this.isVertical=isVertical;\n    }\n\n    getLayout=()=>{\n        const layout=[];\n        if(this.isVertical){\n            \n            for(let i=0;i<this.texts.length;i++){\n                for(let j=0;j<this.texts[i].length;j++){\n                    layout.push({\n                        text: this.texts[i][j],\n                        x: Math.max(0, this.x - (i+0.5)*this.size), // TextAlign right -> center\n                        y: this.y + (j+0.5)*this.size, // baseline top -> middle\n                        maxWidth: this.size\n                    });\n                }\n\n            }\n        }else{\n            for(let i=0;i<this.texts.length;i++){\n                layout.push({\n                    text: this.texts[i],\n                    x: this.x, // TextAlign start\n                    y: this.y + (i+0.5)*this.size, // baseline top -> middle\n                    maxWidth: this.texts[i].length*this.size\n                });\n            }\n        }\n        return layout;\n    }\n\n    static verticalArray=(texts:string[]):string[]=>{ // 横書き文字列配列を縦書き用に変換する。\n        \n      const maxLength=texts.reduce((acc,cur)=>Math.max(acc,cur.length),0);\n      const vertical:string[]=Array(maxLength).fill(\"\");\n      const reversed = texts.reverse();\n      reversed.forEach((text)=>{\n        for(let i=0;i<text.length;i++){\n            vertical[i]+=text[i];\n        }\n      });\n\n      return vertical;\n    }\n}","import { XorShift32 } from './xorshift32';\nimport {SentenceLayoutElement} from './sentence_layout_element'\nimport { Console } from 'console';\n\nconst HorizontalChars = [\"〰\",\"゛\",\"゜\", \",\", \".\", \"：\",\"；\",\"﹐\",\"﹑\",\"﹒\",\"﹙\",\"﹚\", \"(\", ,\")\", \"﹛\",\"﹜\",\"﹝\",\"﹞\",\"‘\",\"’\",\"“\",\"”\",'\"',\"'\"]\n\ninterface placeholder{\n    x:number,\n    y:number,\n    width:number,\n    height:number\n}\n\nexport class Layout{\n\n    sentences:SentenceLayoutElement[];\n\n    rand:XorShift32;\n\n\n\n    width:number;\n    height:number;\n\n    availabilityMap:boolean[][];//  indices[y][x]\n\n\n    \n    emptyNum:number;\n    emptyNumRow:number[];// eNumRow[y]\n    emptyNumColumn:number[];// eNumCol[x]\n\n    //statements:string[][];\n    remainingCharNum:number;\n    \n\n\n    constructor(width:number,height:number,seed:number,statements:string[],placeholder:placeholder={x:0,y:0,width:0,height:0}){\n        width=Math.round(width);\n        height=Math.round(height);\n        this.width=width;\n        this.height=height;\n\n        this.availabilityMap=[];\n        for(let i:number=0;i<height;i++){\n            this.availabilityMap.push(new Array(width).fill(true));\n        }\n\n        this.emptyNum=width*height;\n        this.emptyNumRow=new Array(height).fill(width);\n        this.emptyNumColumn=new Array(width).fill(height);\n\n\n        this.setPlaceholder(placeholder); // placeholder の領域を確保する。\n\n\n\n        this.rand=new XorShift32(seed);\n\n        this.sentences = statements.filter( (text:string) => !(text.length===0) )\n            .map((text:string) =>{\n                let shouldHorizontal = text.split('').some(char => HorizontalChars.includes(char))\n                let isVert = shouldHorizontal ? false : (this.rand.rand()%3===0)\n                 return new SentenceLayoutElement(text.split(/\\r\\n|\\r|\\n/), 0, 0, 1, isVert)\n                });\n\n        const splitedTexts = statements.map((statement:string) => statement.split(/\\r\\n|\\r|\\n/));\n        this.remainingCharNum = splitedTexts.reduce((acc,cur)=> acc + cur.reduce((a,c) => a+c.length,0), 0)\n\n        this.makeLayout();\n    }\n\n\n    logMap=()=>{\n        console.log(`EmptyNum: ${this.emptyNum}`);\n        console.log(`EmptyNumRow: ${this.emptyNumRow}`);\n        console.log(`EmptyNumColumn: ${this.emptyNumColumn}`);\n        let log=\"\";\n        this.availabilityMap.forEach((row)=>{\n            row.forEach((x)=>log+= x?'⚪':'🔴')\n            log+=\"\\n\";\n        });\n        console.log(log);\n    }\n\n    setPlaceholder=(placeholder:placeholder)=>{\n        const x=Math.round(placeholder.x);\n        const y=Math.round(placeholder.y);\n        const width=Math.round(placeholder.width);\n        const height=Math.round(placeholder.height);\n\n        let posX:number;\n        let posY:number;\n\n        for(let dx=0;dx<width;dx++){\n            for(let dy=0;dy<height;dy++){\n\n                if(x+dx<0)posX=0;\n                else if(x+dx>=this.width)posX=this.width-1;\n                else posX=x+dx;\n\n                if(y+dy<0)posY=0;\n                else if(y+dy>=this.height)posY=this.height-1;\n                else posY=y+dy;\n\n                if(this.availabilityMap[posY][posX]){\n                    this.availabilityMap[posY][posX]=false;\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[posY]--;\n                    this.emptyNumColumn[posX]--;\n                }\n            }\n        }\n    }\n\n\n    makeLayout=()=>{\n        this.sentences.forEach((sentence)=>{\n            this.locateSentence(sentence);\n        });\n    }\n\n\n\n    locateSentence=(sentence:SentenceLayoutElement)=>{\n\n        let sizeFactor:number = Math.floor( Math.sqrt(this.emptyNum/this.remainingCharNum) );\n        const isVertical= sentence.isVertical ?? (this.rand.rand()%3===0) // 1/3 で縦書き\n\n        while(sizeFactor>0){\n            if(isVertical){ // 縦書きモード\n                const vLocation=this.findVerticalLocation(sentence.texts,sizeFactor);\n                if(vLocation.anchorX!==-1||vLocation.anchorY!==-1){\n                    sentence.x=vLocation.anchorX;\n                    sentence.y=vLocation.anchorY;\n                    sentence.isVertical=true;\n                    break;\n                }\n\n            }else{ // 横書きモード\n                const hLocation=this.findHorizontalLocation(sentence.texts,sizeFactor);\n                if(hLocation.anchorX!==-1||hLocation.anchorY!==-1){\n                    sentence.x=hLocation.anchorX;\n                    sentence.y=hLocation.anchorY;\n                    break;\n                }\n            }\n            \n            sizeFactor--;\n        }\n\n        sentence.size=sizeFactor;\n        if(sentence.isVertical)this.updateAvailabilityVertically(sentence);\n        else this.updateAvailabilityHorizontally(sentence);\n    }\n\n\n\n\n    findHorizontalLocation=(texts:string[],sizeFactor:number)=>{\n        //console.log(`findLocation called : sizeFactor is ${sizeFactor}`);\n        const wNeeds:number[] = texts.map((text)=>sizeFactor*text.length);\n        const wNeedsMax=wNeeds.reduce((acc,cur)=>Math.max(acc,cur));\n        if(wNeedsMax>this.width)return {anchorX:-1,anchorY:-1};\n\n        const candidatesRowAnchors:number[]=[];// 候補地の行番号配列\n        const checkRangeY=1 + this.emptyNumRow.length - sizeFactor*wNeeds.length;\n        //console.log(`wNeeds is ${wNeeds}`);\n        //console.log(`checkRangeY : 0 ~ ${checkRangeY-1}`);\n        for(let y=0;y<checkRangeY;y++){ // y を動かす。\n\n            let available:boolean=true;\n\n            for(let i=0;i<wNeeds.length;i++){\n\n                for(let j=0;j<sizeFactor;j++){\n                    const row=y+ i*sizeFactor +j;\n                    if(row>=this.emptyNumRow.length || this.emptyNumRow[row] < wNeeds[i] ){\n                        available=false;\n                        break;\n                    }\n                }\n                if(!available)break;\n            }\n\n            if(available)candidatesRowAnchors.push(y);// Anchor Y の候補\n        }\n\n        let anchorX:number=-1;\n        let anchorY:number=-1;\n\n        const candidatesNum=candidatesRowAnchors.length\n        //console.log(`candidates : ${candidatesNum}`);\n\n        for(let num=0;num<candidatesNum;num++){\n\n            const checkRangeX=1 + this.width - wNeedsMax;\n\n\n            const candidateIndex = this.rand.randInt(0,candidatesRowAnchors.length-1);\n            const offsetY=candidatesRowAnchors[candidateIndex]; // Anchor Y 候補を一つ選ぶ。\n\n            const startX=this.rand.randInt(0,checkRangeX-1); // Anchor X 走査の開始点。\n            for(let i=0;i<checkRangeX;i++){\n                const offsetX=(i+startX)%checkRangeX; // 乱数に基づく開始点から Anchor X を動かす。\n                let available:boolean=true;\n\n                for(let j=0;j<wNeeds.length;j++){\n\n                    for(let k=0;k<sizeFactor;k++){\n                        const dy=j*sizeFactor +k;// y を動かす。\n                        for(let dx=0;dx<wNeeds[j];dx++){// x を動かす。\n                            if(! this.availabilityMap[offsetY+dy][offsetX+dx]){// 既に埋まっているか(false)判定。\n                                available=false;\n                                break;\n                            }\n                        }\n                        if(!available)break;\n                    }\n                    if(!available)break;\n                }\n\n                if(available){ // 利用可能であればその位置を記録し終了。\n                    anchorX=offsetX;\n                    anchorY=offsetY;\n                    break;\n                }\n            }\n            if(anchorX===-1&&anchorY===-1){ // 利用不可能だった場合、候補地から除く。\n                candidatesRowAnchors.splice(candidateIndex,1);\n                //console.log(`candidate ${candidateIndex} is not available.`)\n            }else{\n                //console.log(\"break\");\n                break;\n            }\n        }\n\n        return {anchorX,anchorY};\n        \n    }\n\n    updateAvailabilityHorizontally=(sentence:SentenceLayoutElement)=>{\n\n        const wNeeds:number[] = sentence.texts.map((text)=>sentence.size*text.length);\n\n        for(let i=0;i<wNeeds.length;i++){\n\n            for(let j=0;j<sentence.size;j++){\n                const dy=i*sentence.size +j;// y を動かす。\n\n                for(let dx=0;dx<wNeeds[i];dx++){// x を動かす。\n                    this.availabilityMap[sentence.y+dy][sentence.x+dx]=false; // 値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n            }\n        }\n\n\n\n        // 周囲１マスずつマージンを確保する。\n\n        for(let i=0;i<wNeeds.length;i++){ // 左右マージン\n\n            for(let j=0;j<sentence.size;j++){\n                const dy=i*sentence.size +j;// y を動かす。\n                const left=Math.max(0, sentence.x-1);\n                const right=Math.min(this.width-1, sentence.x+wNeeds[i]);\n\n                if(this.availabilityMap[sentence.y+dy][left]){\n                    this.availabilityMap[sentence.y+dy][left]=false; // 左マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[left]--;\n\n                }\n                if(this.availabilityMap[sentence.y+dy][right]){\n                    this.availabilityMap[sentence.y+dy][right]=false; // 右マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[right]--;\n\n                }\n\n\n            }\n        }\n\n        for(let i=0;i<wNeeds.length;i++){ // 上下マージン\n\n            for(let dx=0;dx<wNeeds[i];dx++){// x を動かす。\n                const top=Math.max(0, sentence.y + i*sentence.size-1);\n                const bottom=Math.min(this.height-1, sentence.y + (i+1)*sentence.size);\n\n                if(this.availabilityMap[top][sentence.x+dx]){\n                    this.availabilityMap[top][sentence.x+dx]=false; // 上マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[top]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n                if(this.availabilityMap[bottom][sentence.x+dx]){\n                    this.availabilityMap[bottom][sentence.x+dx]=false; // 下マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[bottom]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n\n            }\n        }\n\n        this.remainingCharNum-=sentence.texts.reduce((acc,cur)=> acc + cur.length,0); // 配置した文字数を引く。\n    }\n\n\n\n\n\n    findVerticalLocation=(texts:string[],sizeFactor:number)=>{\n        const hNeeds:number[] = texts.map((text)=>sizeFactor*text.length);\n        const hNeedsMax=hNeeds.reduce((acc,cur)=>Math.max(acc,cur));\n\n        if(hNeedsMax>this.height)return {anchorX:-1,anchorY:-1};\n\n        const candidatesColumnAnchors:number[]=[];// 候補地の列番号配列\n        const checkRangeX= sizeFactor*hNeeds.length -1; // 走査領域の左端\n        //console.log(`texts: ${texts}\\nsizeFactor: ${sizeFactor}`);\n        //console.log(`hNeeds: ${hNeeds}`);\n        //console.log(`checkRangeX: ${checkRangeX} - ${this.emptyNumColumn.length}`);\n        for(let x=this.emptyNumColumn.length;x >= checkRangeX;x--){ // x を右から左へ動かす。[checkRangeX, Width]\n\n            let available:boolean=true;\n\n            for(let i=0;i<hNeeds.length;i++){\n\n                for(let j=0;j<sizeFactor;j++){\n                    const column=x - i*sizeFactor - j;\n                    if(column<checkRangeX || this.emptyNumColumn[column] < hNeeds[i] ){\n                        available=false;\n                        break;\n                    }\n                }\n                if(!available)break;\n            }\n\n            if(available)candidatesColumnAnchors.push(x);// Anchor X の候補 TOP RIGHT\n        }\n\n        let anchorX:number=-1;\n        let anchorY:number=-1;\n\n        const candidatesNum=candidatesColumnAnchors.length\n        //console.log(`candidates: ${candidatesNum}`);\n\n        for(let num=0;num<candidatesNum;num++){\n\n            const checkRangeY=1 + this.height - hNeedsMax;\n\n\n            const candidateIndex = this.rand.randInt(0,candidatesColumnAnchors.length-1);\n            const offsetX=candidatesColumnAnchors[candidateIndex]; // Anchor X 候補を一つ選ぶ。\n\n            const startY=this.rand.randInt(0,checkRangeY-1); // Anchor Y 走査の開始点。\n            for(let i=0;i<checkRangeY;i++){\n                const offsetY=(i+startY)%checkRangeY; // 乱数に基づく開始点から Anchor X を動かす。\n                let available:boolean=true;\n\n                for(let j=0;j<hNeeds.length;j++){\n\n                    for(let k=0;k<sizeFactor;k++){\n                        const dx= -j*sizeFactor -k;// x を動かす。\n                        for(let dy=0;dy<hNeeds[j];dy++){// y を動かす。\n                            if(offsetX+dx<0 || !this.availabilityMap[offsetY+dy][offsetX+dx]){// 既に埋まっているか(false)判定。\n                                available=false;\n                                break;\n                            }\n                        }\n                        if(!available)break;\n                    }\n                    if(!available)break;\n                }\n\n                if(available){ // 利用可能であればその位置を記録し終了。\n                    anchorX=offsetX;\n                    anchorY=offsetY;\n                    break;\n                }\n            }\n            if(anchorX===-1&&anchorY===-1){ // 利用不可能だった場合、候補地から除く。\n                candidatesColumnAnchors.splice(candidateIndex,1);\n                //console.log(`candidate ${candidateIndex} is not available.`)\n            }else{\n                //console.log(\"break\");\n                break;\n            }\n        }\n        //console.log(`anchorX:${anchorX}, anchorY:${anchorY}`);\n        return {anchorX,anchorY};\n        \n    }\n\n    updateAvailabilityVertically=(sentence:SentenceLayoutElement)=>{\n        const hNeeds:number[] = sentence.texts.map((text)=>sentence.size*text.length);\n\n        for(let j=0;j<hNeeds.length;j++){\n\n            for(let k=0;k<sentence.size;k++){\n                const dx= -j*sentence.size -k;// x を動かす。\n\n                for(let dy=0;dy<hNeeds[j];dy++){// y を動かす。\n                    this.availabilityMap[sentence.y+dy][sentence.x+dx]=false;\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]-=1;\n                    this.emptyNumColumn[sentence.x+dx]-=1;\n                }\n            }\n        }\n\n\n\n        // 周囲１マスずつマージンを確保する。\n\n        for(let i=0;i<hNeeds.length;i++){ // 上下マージン\n\n            for(let j=0;j<sentence.size;j++){\n                const dx= -i*sentence.size -j;// x を動かす。\n                const top=Math.max(0, sentence.y-1);\n                const bottom=Math.min(this.height-1, sentence.y+hNeeds[i]);\n\n                if(this.availabilityMap[top][sentence.x+dx]){\n                    this.availabilityMap[top][sentence.x+dx]=false; // 左マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[top]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n                if(this.availabilityMap[bottom][sentence.x+dx]){\n                    this.availabilityMap[bottom][sentence.x+dx]=false; // 右マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[bottom]--;\n                    this.emptyNumColumn[sentence.x+dx]--;\n\n                }\n\n\n            }\n        }\n\n        for(let i=0;i<hNeeds.length;i++){ // 左右マージン\n\n            for(let dy=0;dy<hNeeds[i];dy++){// y を動かす。\n                const right=Math.min(this.width-1, sentence.x - i*sentence.size +1);\n                const left=Math.max(0, sentence.x - (i+1)*sentence.size);\n\n                if(this.availabilityMap[sentence.y+dy][right]){\n                    this.availabilityMap[sentence.y+dy][right]=false; // 右マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[right]--;\n\n                }\n                if(this.availabilityMap[sentence.y+dy][left]){\n                    this.availabilityMap[sentence.y+dy][left]=false; // 左マージンの値を更新する。\n\n                    this.emptyNum--; // 空き数を更新する。\n                    this.emptyNumRow[sentence.y+dy]--;\n                    this.emptyNumColumn[left]--;\n\n                }\n\n            }\n        }\n\n\n\n        this.remainingCharNum-=sentence.texts.reduce((acc,cur)=> acc + cur.length,0); // 配置した文字数を引く。\n\n    }\n\n\n\n\n}\n\n\n","import React, { useEffect, useState } from 'react';\nimport { Layout } from './util/layout';\nimport \"./css/image.css\";\nimport WebFont from 'webfontloader'\nimport TextProps from './util/text_props';\n\n\ninterface props{\n    texts:TextProps[],\n    width:number;\n    height:number;\n    backgroundColor?:string;\n    color?:string;\n    divider?:number\n    seed?:number;\n}\n\nconst Renderer:React.FC<props>=({texts, width, height, backgroundColor='white',color='black',divider=5, seed=1234567})=>{\n    const [image,setImage]=useState<string|undefined>(undefined);\n\n    useEffect(()=>{\n        const canvas=document.createElement(\"canvas\");\n        canvas.width=width;\n        canvas.height=height;\n\n        const context=canvas.getContext(\"2d\");\n\n        if(context){\n            \n            const families:string[] = [];\n            texts.forEach((t)=>{\n                if(!families.includes(`${t.fontName}:400,700`)){\n                    families.push(`${t.fontName}:400,700`);\n                    families.push(`${t.fontName} Vertical:400,700`);\n                }\n            });\n\n            WebFont.load({\n                custom:{\n                    families:families,\n                    urls:['./css/fonts.css'],\n                },\n                active:()=>{\n                    draw(context);\n                    setImage( canvas.toDataURL() );\n                },\n            });\n\n        }\n    });\n    \n\n\n    const draw=(context:CanvasRenderingContext2D)=>{\n        context.fillStyle=backgroundColor;\n        context.fillRect(0,0,width,height);\n\n        const placeholder= {x:(width-300)/divider ,y:(height-30)/divider, width:300/divider, height:30/divider};\n        context.font=\"30px 'M PLUS Rounded 1c', sans-serif\";\n        //context.fillStyle = \"rgba(29, 161, 242, 0.5)\";\n        //context.fillRect(width-305, height-35, 305, 35);\n        context.fillStyle=\"gray\";//\"rgb(29, 161, 242)\";\n        context.textAlign=\"end\";\n        context.textBaseline=\"bottom\";\n        context.fillText(\"#発言まとめメーカー\",width,height);\n\n        const layout = new Layout(width/divider, height/divider, seed, texts.map(t=>t.text), placeholder);\n        //layout.logMap();\n\n        context.textBaseline=\"middle\";\n        context.fillStyle=color;\n\n        layout.sentences.forEach((sentence,i)=>{\n            context.textAlign=sentence.isVertical?\"center\":\"left\";\n\n            const style=`${texts[i].isItalic?\"italic \":\"\"}${texts[i].isBold?\"bold \":\"\"}`;\n            const font = `${sentence.isVertical?`'${texts[i].fontName} Vertical', `:\"\"}` + `'${texts[i].fontName}', 'Yu Mincho', 'Hiragino Mincho ProN', serif`;\n            context.font=`${style}${divider*sentence.size}px ${font}`;\n            \n            const lyts = sentence.getLayout();\n            lyts.forEach((lyt)=>{\n                context.fillText(lyt.text, divider*lyt.x, divider*lyt.y, divider*lyt.maxWidth);\n            });\n        });\n\n    }\n\n\n\n    return (<img alt=\"画像を生成中です。しばらく経っても画像が表示されない場合は、お使いのブラウザがWebフォントに対応していない可能性があります。\" src={image}/>);\n    \n}\n\nexport default Renderer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/fonts.css';\nimport InputForm from './InputForm';\nimport Renderer from './renderer';\nimport { Typography, Container, Grid, Paper, Box, Divider, MuiThemeProvider, createMuiTheme, Link } from '@material-ui/core';  \nimport TitleImage from './title.jpg';\nimport TextProps from './util/text_props';\n\nconst howTo=\"下の空欄に発言を入力してください。もっと入力したいときは「＋」を押してください。入力が終わったら「作成」をタップ。\"\nconst hints=\"できるだけたくさんの発言を入力しましょう！画像はシード値をもとにランダム生成され、「更新」を押すと別のパターンに変化します。できた画像は長押しタップ等で保存できます。\"\nconst letstweet=\"「#発言まとめメーカー」をつけてツイートしよう！\";\nconst license=\"発言まとめメーカーで生成された画像は、商用・非商用問わず無料でご利用いただけます。自由に編集・加工していただいて構いません。使用報告等も不要です。ご利用の際のクレジット表記については、商用の場合のみ「発言まとめメーカー」の名称と当サイトのリンクを利用者が確認できる箇所にご記入ください。生成された画像、およびその内容によって生じる損害については一切の責任を負いかねますのでご了承ください。\";\n\nconst theme=createMuiTheme({\n\n  palette:{\n    primary:{main:'#ffd900'},\n    secondary:{main:'#65318e'},\n  },\n\n  typography: {\n    fontFamily: [\n      'M PLUS Rounded 1c',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n\ninterface AppProps{\n}\n\ninterface AppState{\n  seed:number,\n  //statements:string[],\n  texts:TextProps[],\n  backgroundColor:string,\n  color:string,\n}\n\nclass App extends React.Component<AppProps,AppState>{\n\n  constructor(props:AppProps){\n    super(props);\n    \n    this.state={texts:[],seed:1234567,backgroundColor:'white',color:'black'};\n\n  }\n\n  submitProperties=(seed:number,texts:TextProps[],backgroundColor:string,color:string)=>{\n    //const sum = statements.reduce((acc,cur)=>acc+cur.length,0);\n    //if(sum===0)statements=new Array(100).fill(\"発言を入力してください\");\n    this.setState({seed:seed ,texts:texts,backgroundColor:backgroundColor,color:color});\n    //console.log(statements)\n    //this.setState({statements:s});\n  }\n\n  render(){\n    return (\n      <div className=\"app\" >\n      <MuiThemeProvider theme={theme}>\n      <Container style={{background:'white'}}>\n        <Box paddingBottom={2}>\n          <img src={TitleImage} style={{ pointerEvents:'none'}}/>\n        </Box>\n      </Container>\n\n      <Container style={{background:'linear-gradient(#ffffff, #ede7f6)'}}>\n        <Grid container spacing={2} alignItems=\"center\" justify=\"center\">\n          {/* <Grid item xs={12}>\n          <Typography gutterBottom align='right'>\n          <Link href=\"https://yukihirok.github.io/hatsugen-matome-maker/legacy/\" color='secondary' target=\"_blank\" rel=\"noopener\">旧版はこちら</Link>\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12}>\n            <Paper elevation={3}>\n              <Box padding={2}>\n                <Typography variant='h6' gutterBottom align='center'>使い方</Typography>\n                <Typography variant='body1' gutterBottom>{howTo}</Typography>\n                <Typography variant='body1' gutterBottom>{hints}</Typography>\n                <Typography variant='body1' gutterBottom>{letstweet}</Typography>\n              </Box>\n            </Paper>\n          </Grid>\n          {/* <Grid item xs={12}>\n            <Paper elevation={3}>\n              <Box padding={2}>\n                <Typography variant='h6' gutterBottom align='center'>画像の利用について</Typography>\n                <Typography variant='body1' gutterBottom>{license}</Typography>\n              </Box>\n            </Paper>\n          </Grid> */}\n        </Grid>\n        <Box paddingY={2}>\n          <Divider variant='middle'/>\n        </Box>\n      </Container>\n\n      <Container style={{background:'#ede7f6'}}>\n        <InputForm onSubmit={this.submitProperties}/>\n        {(this.state.texts.length===0)\n          ?null\n          :<Box paddingBottom={4}><Paper elevation={3}><Box padding={2}>\n            <Renderer texts={this.state.texts} seed={this.state.seed} width={1500} height={1000} backgroundColor={this.state.backgroundColor} color={this.state.color}/>\n          </Box></Paper></Box>\n        }\n        <Box paddingTop={2} paddingBottom={4}>\n          <Divider variant='middle'/>\n        </Box>\n      </Container>\n      \n      <Container style={{background:'linear-gradient(#ede7f6, #e597b2)'}}>\n        <Box paddingBottom={4}>\n          <Paper elevation={3}>\n            <Box padding={2}>\n              <Typography variant='h6' gutterBottom align='center'>画像の利用について</Typography>\n              <Typography variant='body1' gutterBottom>{license}</Typography>\n            </Box>\n          </Paper>\n        </Box>\n      </Container>\n\n      <Box style={{background:'#302833', color:'white'}}>\n        <Typography align='center'>発言まとめメーカー</Typography>\n        <Typography align='center'>Copyright © 2019-2020 <Link color='inherit' href=\"https://twitter.com/2000ymon\" target=\"_blank\" rel=\"noopener\">@2000ymon</Link> All Rights Reserved.</Typography>\n      </Box>\n\n      </MuiThemeProvider>\n    </div>\n);\n  }\n}\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}